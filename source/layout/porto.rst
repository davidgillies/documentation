

The Porto Layout
================

Is a default and simple layout shipped with ``silva.core.layout``. Its
purpose is to contain default CSS for Silva Documents, and be easily
overriden to implement your own layout.

.. autointerface:: silva.core.layout.porto.interfaces.IPorto

   Base layer to which are associated default and resuable
   :term:`content provider`.

.. autointerface:: silva.core.layout.porto.interfaces.IPortoWithCSS




Reusing and modifiying the HTML generated by the Porto Layout
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The Porto Layout defines some :term:`content provider` that are
usefull to reuse. Those are:

.. class:: silva.core.layout.porto.porto.Layout

   Although it has a confusing name this :term:`Content provider` is
   not a :term:`Layout`. It is responsible in Porto to generate the
   HTML content of the ``<body>`` tag of the HTML page. It will
   include the providers *header*, *navigation*, *footer* and take
   care to include the content of the :term:`page` that the current
   :term:`layout` is including. In most of the Silva theme, this
   :term:`Content Provider` is the one that is extended in order to
   modify the generated HTML.

.. class:: silva.core.layout.porto.porto.Header

   This :term:`content provider` is responsible for the rendering of
   the header. By default it include *breadcrumbs*.

.. class:: silva.core.layout.porto.porto.Breadcrumbs

   This :term:`content provider` will render a breadcrumb, and can be
   used anywhere in your HTML page.

.. class:: silva.core.layout.porto.porto.Navigation

   This :term:`content provider` will render a navigation tree, and
   can be used anywhere in your HTML page. In addition to this, it
   contains some properties in order to customize its behavior if you
   choose to extend it:

   .. attribute:: max_depth

      Depth of the navigation tree, defaults to 2.

   .. attribute:: only_container

      Boolean indicating if the navigation tree should display only
      containers (Silva Folder, Silva Publication...) except for the
      current branch of the navigation where the visitor is. Default
      to ``True``.

.. class:: silva.core.layout.porto.porto.Footer

   This :term:`content provider` is responsible for the rendering of
   the footer.

In addition a couple of other :term:`content provider` can be used to
change the HTML of the ``<head>`` tag:

.. class:: silva.core.layout.porto.porto.Favicon

    This :term:`content provider` is responsible to render the link to
    the favicon in the ``<head>`` tag.

    .. attribute:: favicon_url

       Url to the favicon. It is usually a property that return the
       URL of a resource file located inside the static folder.

.. class:: silva.core.layout.porto.porto.HTMLHeadInsert

    This :term:`viewlet manager` let your insert extra tags inside the
    ``<head>`` tag.

For the example ``silvatheme.blogtheme`` that was based on the Porto
Layout, you can add a new Python module ``theme.py`` in it where you
put your customization:

.. sourcecode:: python
   :linenos:

   from silva.core import conf as silvaconf
   from silva.core.layout.porto import porto

   from .interfaces import ISiteLayer

   silvatheme.layer(IBlogLayer)

   class Layout(porto.Layout):
       pass

   class Navigation(porto.Navigation):
       max_depth = 4

   class Favicon(porto.Favicon)

       @property
       def favicon_url(self):
           return self.static['my_custom_favicon.ico']()


To this you can create a directory called ``theme_templates`` in the
extensions, where you can add a `Chameleon Page Template`_ under the
name ``layout.cpt`` with the following code:

.. code-block:: html

   <tal:content>
     <header>
        <h1>My wonderful site</h1>
        <div tal:replace="structure provider:breadcrumbs" />
     </header>
     <nav tal:content="structure provider:navigation">
     <article tal:content="structure view.content()"></article>
     <footer>My wonderful site is powered by the Porto Layout.</footer>
   </tal:content>


.. _Chameleon Page Template: http://chameleon.readthedocs.org/en/latest/
