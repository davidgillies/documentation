Configuring Apache's mod_wsgi to present your site to the world
===============================================================

Silva now support WSGI. You can use Apache's ``mod_wsgi`` to directly
serve it, without having it running in a different daemon and
redirecting requests to it. This is the recommend way to use Silva.

.. contents::


Requirements for mod_wsgi
-------------------------

For this you need to install ``mod_wsgi`` in your Apache installation.


.. warning::

  When you install ``mod_wsgi`` it is compiled to use a specific
  version and installation of Python, usually the one of your system
  if you install it with a your system packaging system.

  ``mod_wsgi`` **must** use Python 2.7, and you **must** install
  Silva with this same Python installation.


For this reason we recommend you to install ``mod_wsgi`` by hand.

.. _mod-wsgi-configuration:

Configuration of mod_wsgi
-------------------------

After installing ``mod_wsgi``, you have to load it and ``mod_rewrite``
in your Apache configuration.

Then, you can edit your Apache configuration to define a virtual host
for you site. You will use ``mod_rewrite`` to rewrite the request URL
in order to shape it correctly for the virtual host monster that will
make Zope generate URLs for the site URL you configured.

.. code-block:: apache
   :linenos:

   WSGIDaemonProcess mysite user=username group=username threads=4 maximum-requests=1000000 python-eggs=/tmp/python-eggs

   <VirtualHost *:80>
      ServerName www.mysite.com

      RewriteEngine On
      RewriteRule ^/(.*) /VirtualHostBase/http/%{HTTP_HOST}:80/mysite/VirtualHostRoot/$1 [PT]
      WSGIScriptAlias / /fs/path/to/silva/installation/parts/mod_wsgi_app/wsgi
      WSGIProcessGroup mysite
      WSGIPassAuthorization On

      <Directory /fs/path/to/silva/installation/parts/mod_wsgi_app>
        Order deny,allow
        Allow from all
     </Directory>
   </VirtualHost>


Explanation
~~~~~~~~~~~

Line 1 defines a process to run our Silva site with ``mod_wsgi``. The
options ``user`` and ``group`` defines under which user ``username``
and group ``username`` the process is going to run. These user
**must** be the same non-privileged user that you used to install
Silva. The option ``threads`` defines the number of threads to use in
each process. **You must not** configure more than 7 threads in any
case. Finally the option ``maximum-requests`` renew our WSGI process
every 10000 requests.

Line 7, defines the rewrite rule to trigger Zope VirtualHostMonster,
so that Zope generates URLs without the identifier ``mysite`` in
it. The flag ``PT`` tell Apache to transmit the modified URL to the
next handler, ``mod_wsgi``. For more information about the URL
rewriting, please reference to :ref:`zope-virtual_host_monster`.

Line 8 specifies the WSGI application to use. This should point to the
``wsgi`` script creating in your Buildout directory, generated by the
section ``mod_wsgi_app``.

Line 9 tells Apache to the use the process defined on line 1.

Line 12 to 15 authorize visitors to access the WSGI application,
i.e. Silva.

Multiple processes
~~~~~~~~~~~~~~~~~~

If you want to have multiple WSGI processes, you need first to install
a :term:`ZEO` server or `RelStorage`_.

You **cannot** configure multiple processes without a :term:`ZEO`
server or a `RelStorage`_ or it will corrupt your Zope database.

If you enable multiple processes, all Zope processes will use the same
Zope configuration to connect to the same database which means there
will be only one Zope instance created with the same settings.

Caution must be taken if you want to use Blobs with this setup: the
blob storage directory **must be shared** between all Zope processes
connected to the same database. That means either all the Zope
processes run on the same computer **or** the Blob directory needs to
be shared between servers (using NFS for instance). Sharing Blobs
over the network doesn't bring any downside on performances.

Moreover, if you setup a :term:`ZEO` or a `RelStorage`_, you need to
install *and* configure `memcached`_.

You can refer to :ref:`silva-high-availability-installation` for more
information.


Starting and Stopping your site
-------------------------------

With this installation, Silva is directly embed in Apache. To
*restart* Silva, you need to restart Apache. To *stop* Silva, you need
to stop Apache.

.. warning::

  You **should not** use the installed Silva daemon while Silva is
  running within Apache (unless you use :term:`ZEO` or `RelStorage`_).


.. _RelStorage: http://pypi.python.org/pypi/RelStorage
.. _memcached: http://www.memcached.org
